You are GlowBot2‚Äôs UI and backend enhancement engineer.

Your task is to **ensure all content template types** are available, clearly presented, and functionally wired into the content generation process.

---

üéØ OBJECTIVE:
Integrate **all template types** into the generator UI and ensure the correct one is passed to the OpenAI backend for content generation.

---

üß† BACKEND LOGIC:

- Pull all available template types from `/templates` or the configured enum/object in code.
- Example list (add if missing):
  - SEO Blog Post
  - Listicle
  - Comparison Breakdown
  - Product Demo Script
  - Influencer Caption
  - Pros & Cons
  - ‚ÄúSurprise Me‚Äù (random selection or GPT-decided)
  - Video Hook + Short Script
  - Platform-Specific Caption (Twitter post, IG caption, etc.)
  - Skit or Ad Style Script
  - Buyer‚Äôs Guide
  - Routine Example
  - Meme-style Post
  - Informational Thread

- Store each template‚Äôs name, slug, description (optional), and platform compatibility.

---

üñºÔ∏è FRONTEND UI INTEGRATION:

- Add a `Template Type` dropdown (or segmented tabs) in the content generator form.
- Default selection: **SEO Blog Post**
- If user selects ‚ÄúSurprise Me,‚Äù call GPT with a system prompt:  
  `"Based on the product and niche, pick the best-performing content format from our library. Justify briefly."`

- On selection, update content payload:
  ```json
  {
    "templateType": "comparison-breakdown",
    ...
  }
Optional: Show tooltips or info icons next to each template explaining its use case.

‚öôÔ∏è CHECKLIST TO COMPLETE:

 Fetch or define full list of templates globally

 Display all templates in generator UI

 Ensure selected template gets passed to OpenAI in templateType field

 Add "Surprise Me" mode that GPT can dynamically select

 Make UI mobile-responsive and clean (accordion or dropdown)

 Ensure platform compatibility (some formats only apply to specific platforms like TikTok or Twitter)

üß™ BONUS:

Add a debug/test button (visible in dev only) to preview all templates side-by-side for QA review ‚Äî each with mock content and structure.

GlowBot2 should empower users to generate any type of content they need, in one tap.
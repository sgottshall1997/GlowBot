❗️There’s a critical issue: Even when I select the Claude model in the UI, the **scheduled generator still produces ChatGPT outputs**.

This suggests either:
- A frontend → backend miscommunication (model selection isn't passed properly), or
- The backend is defaulting to GPT regardless of selection

🧠 Your job is to fully debug and fix this issue.

---

🎯 WHAT TO DO:

✅ 1. **Trace and Fix Model Selection Flow**
- Inspect the entire model selection flow:
  - UI dropdown → frontend state
  - Payload sent to API
  - Backend `generateContent()` logic
- Ensure the selected model (e.g. `"claude"`) is correctly:
  - Captured on the frontend
  - Sent in the generation request body
  - Passed through to the promptFactory or LLM dispatcher
  - Actually used to call Claude, not GPT

✅ 2. **Add Debug Logging**
- Temporarily log the selected model in:
  - The incoming API request
  - The start of the generation handler
  - The final model name passed into OpenAI or Claude client
- This will help pinpoint where the override (or default fallback) is happening

✅ 3. **Test All Generator Modes**
Please run a **comprehensive test suite** for both:

### 🔹 A. Manual (Single) Generator
- Set model to `"claude"` → confirm output metadata/logs reflect Claude
- Set model to `"gpt"` → confirm output switches
- Confirm no silent fallback or mismatch

### 🔹 B. Scheduled Bulk Generator
- Set all 7 niches to `"claude"` (or any mix)
- Confirm each content piece is generated using the correct model
- Log the model used and include sample output or metadata

✅ 4. **Validate Output Consistency**
- Make sure:
  - The content returned by Claude looks Claude-like (tone, structure)
  - The content metadata reflects the correct model (`modelUsed: "claude"`)
  - The Make.com webhook payload includes the correct model name

✅ 5. **Final Deliverable**
- Let me know:
  - What was causing the Claude selection to be ignored
  - What you changed in the UI/backend to fix it
  - Screenshots or log excerpts proving Claude is now respected in both generation modes
- Confirm the system now uses the correct model reliably for all scenarios

This is a high-priority fix — we need to trust the model selection logic before scaling further.